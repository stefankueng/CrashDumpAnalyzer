@using CrashDumpAnalyzer.Models
@using CrashDumpAnalyzer.Utilities
@using Microsoft.AspNetCore.Mvc.TagHelpers

<div class="modal fade" id="setFixedVersionModal" tabindex="-1" role="dialog" aria-labelledby="setFixedVersionModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="setFixedVersionModalLabel">Enter the version where the problem is fixed</h5>
            </div>
            <div class="modal-body">
                <label for="fixedVersionEdit">fixed as of version:</label>
                <input class="modalTextInput" type="text" id="fixedVersionEdit" name="fixedVersionEdit" autocomplete='off'>
                <p id="fixedVersionError" style="color: red;"></p>
                <div id="filterBuildTypes" data-toggle="buttons">
                    @foreach (var buildType in BuildTypes.BuildTypeStrings())
                    {
                        <div>
                            <input type="radio" id="@buildType" name="buildType" value="@buildType">
                            <label for="@buildType">@buildType</label>
                        </div>
                    }
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary saveEdit">Save changes</button>
                <button type="button" class="btn btn-secondary close" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="setTicketModal" tabindex="-1" role="dialog" aria-labelledby="setTicketModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="setTicketModalLabel">Enter the ticket</h5>
            </div>
            <div class="modal-body">
                <label for="ticketEdit">Ticket:</label>
                <input class="modalTicketInput" type="text" id="ticketEdit" name="ticketEdit" autocomplete='off'>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary saveTicket">Save changes</button>
                <button type="button" class="btn btn-secondary close" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="setCommentModal" tabindex="-1" role="dialog" aria-labelledby="setCommentModallLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="setCommentModalLabel">Enter a comment</h5>
            </div>
            <div class="modal-body">
                <label for="commentEdit">Comment:</label><br/>
                <textarea class="modalCommentInput" id="commentEdit" name="commentEdit" cols="40" rows="5"></textarea>
                <p id="commentError" style="color: red;"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary saveComment">Save changes</button>
                <button type="button" class="btn btn-secondary close" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    function deleteCallstack(id) {
        console.debug("deleting callstack for " + id);
        $.ajax({
            url: '/Api/DeleteDumpCallstack?id=' + id,
            processData: false,
            contentType: false,
            type: 'POST',
            complete: function (data) {
                location.reload();
            },
        });
    }
    function deleteDump(callstackId, dumpId) {
        console.debug("deleting dump " + dumpId + " of callstack " + callstackId);
        $.ajax({
            url: '/Api/DeleteDumpFile?callstackId=' + callstackId + '&dumpId=' + dumpId,
            processData: false,
            contentType: false,
            type: 'POST',
            complete: function (data) {
                location.reload();
            },
        });
    }
    function unlinkCallstack(id) {
        console.debug("unlinking callstack for " + id);
        $.ajax({
            url: '/Api/UnlinkDumpCallstack?id=' + id,
            processData: false,
            contentType: false,
            type: 'POST',
            complete: function (data) {
                location.reload();
            },
        });
    }
    function reAnalyzeDump(callstackId) {
    console.debug("reanalyzing first dump of callstack " + callstackId);
    $.ajax({
        url: '/Api/ReAnalyzeDumpFile?callstackId=' + callstackId,
        processData: false,
        contentType: false,
        type: 'POST',
        complete: function (data) {
            location.reload();
        },
    });
    }

</script>
